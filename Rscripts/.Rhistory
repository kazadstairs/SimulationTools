Srho <- cor.test(x="RM",y="QM",method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
show(myDF.plot["RM"])
show(typeof(myDF.plot$"RM"))
Srho <- cor.test(x="RM",y="QM",method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
show(myDF.plot[,"RM"])
show(typeof(myDF.plot$"RM"))
Srho <- cor.test(x="RM",y="QM",method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"]
Yvals <- myDF.plot[,"QM"]
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"]
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[[,"RM"]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"]
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"]
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"]
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"][[1]] #[,""] gets the single tibble column. THen [[1]] gets the first element: The vector
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"][[1]] #[,""] gets the single tibble column. THen [[1]] gets the first element: The vector
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type,title=Srho$estimate))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","Cmax")
myDF <- read.csv2(UUPATH)
myDF <- myDF[myDF$Distribution.Type=="N(p,0.1p)"]
myDF[1:10,1:10]
myDF <- myDF[myDF$Distribution.Type=="N(p,1)"]
myDF <- subset(myDF,myDF$Distribution.Type == "N(p,1)")
MakePlot("FS","Cmax")
MakePlot("TS","Cmax")
MakePlot("TS","LinearStartDelay")
MakePlot("FS","LinearStartDelay")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"][[1]] #[,""] gets the single tibble column. THen [[1]] gets the first element: The vector
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type,title=paste(Srho$estimate)))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","LinearStartDelay")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"][[1]] #[,""] gets the single tibble column. THen [[1]] gets the first element: The vector
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top") + ggtitle(title=Shro$estimate)
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","LinearStartDelay")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"][[1]] #[,""] gets the single tibble column. THen [[1]] gets the first element: The vector
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top") + ggtitle(title=Shro$estimate)
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","LinearStartDelay")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"][[1]] #[,""] gets the single tibble column. THen [[1]] gets the first element: The vector
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top") + ggtitle(Srho$estimate)
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","LinearStartDelay")
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"][[1]] #[,""] gets the single tibble column. THen [[1]] gets the first element: The vector
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top") + ggtitle(paste("Spearman = ",Srho$estimate)
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
show(names(myDF.plot)[1:15])
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
Xvals <- myDF.plot[,"RM"][[1]]
show(Xvals)
show(typeof(Xvals))
Yvals <- myDF.plot[,"QM"][[1]] #[,""] gets the single tibble column. THen [[1]] gets the first element: The vector
Srho <- cor.test(x=Xvals,y=Yvals,method = "spearman")
show(Srho$estimate)
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top") + ggtitle(paste("Spearman = ",Srho$estimate))
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot("FS","LinearStartDelay")
MakeAllPlots()
