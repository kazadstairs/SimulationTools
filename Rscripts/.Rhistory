getwd()
cd()
dir(path = "C:\Users/3496724/Source/Repos/SimulationTools/Rscripts/")
dir(path = "C:/Users/3496724/Source/Repos/SimulationTools/Rscripts/")
dir()
setwd("C:/Users/3496724/Source/Repos/SimulationTools/Rscripts/")
dir()
SCHEDNAMES <- c("Rolling Machine Assignment", "Random", "GreedyLoadBalancing")
INSTANCE <- "Pinedo"
NRUNS <- "1000"
RM.ID <- 1
QM.ID <- 2
###
########################## Libraries #########################################
###
library(ggplot2)
library(plyr)
library(dplyr)
###
########################## FUNCTIONS #########################################
###
GetPath <- function(InstanceName,ScheduleName,Nruns,FileType){
BasePath <- "C:\\Users\\Gebruiker\\Documents\\UU\\MSc Thesis\\Code\\OutPut\\"
PathComponents <- c(BasePath,
"Instance_", InstanceName,
"_Schedule_", ScheduleName,
"_Runs_", Nruns,
"_",FileType,
".txt")
FilePath <- paste(PathComponents, collapse="")
return(FilePath)
}
GetSimSettings <- function(InstanceName,ScheduleName,Nruns){
path <- GetPath(InstanceName,ScheduleName,Nruns,"SimSettings")
return(read.csv2(file = path,header = FALSE))
}
GetQMs <- function(InstanceName,ScheduleName,Nruns){
path <- GetPath(InstanceName,ScheduleName,Nruns,"QMs")
return(read.csv2(file = path, header = FALSE))
}
GetInstanceName <- function(){
return(SimSettings[1,])
}
GetScheduleName <- function(){
return(SimSettings[2,])
}
GetRMName <- function(){
f <- levels(GetSimSettings(INSTANCE,SCHEDNAMES[1],NRUNS)[2+2*RM.ID,])[6]
return(f)
}
QMNames <- c("Cmax","Linear Start Delay","Start Punctuality","TODO: Completion Punctuality")
GetQMName <- function(){
return(QMNames[QM.ID])
}
GetRM <- function(SimSettings){
f <- SimSettings[3+2*RM.ID,]
return( as.numeric(levels(f))[f] )
}
GetQM <- function(QMData){
return(QMData[,1+QM.ID])
}
GetCmaxColumn <- function(QMData){
return(QMData[,2])
}
GetLinearDelayColumn <- function(){
return(QMData[,3])
}
GetStartPunctualityColumn <- function(){
return(QMData[,4])
}
GetCompletionPunctualiyColumn <- function(){
return(QMData[,5])
}
BuildDfFor <- function(InstanceName,ScheduleName,Nruns){
rmvals <- GetRM(GetSimSettings(InstanceName,ScheduleName,Nruns))
cmax <- GetQM(GetQMs(InstanceName,ScheduleName,Nruns))
df <- data.frame( RM = rmvals, Cmax = cmax)
df.summary <- df %>% group_by(RM) %>% summarize(ymin = mean(cmax) - sd(cmax), ymax = mean(cmax) + sd(cmax),ymean = mean(cmax))
df.summary$PointLabel <- abbreviate(ScheduleName)
return( df.summary )
}
# build data frame:
BuildPlot <- function(cScheduleNames,InstanceName,Nruns)
{
##
dflist <- lapply(cScheduleNames,FUN = BuildDfFor, InstanceName = InstanceName, Nruns = Nruns)
dfplotinfo <- rbind.fill(dflist)
return (dfplotinfo)
}
plot.df <- BuildPlot(SCHEDNAMES,INSTANCE,NRUNS)
getwd()
setwd(..)
cd..
cd()..
cdir(..)
SCHEDNAMES <- c("Rolling Machine Assignment", "Random", "GreedyLoadBalancing")
INSTANCE <- "Pinedo"
NRUNS <- "1000"
RM.ID <- 1
QM.ID <- 2
###
########################## Libraries #########################################
###
library(ggplot2)
library(plyr)
library(dplyr)
###
########################## FUNCTIONS #########################################
###
GetPath <- function(InstanceName,ScheduleName,Nruns,FileType){
# BasePath <- "C:\\Users\\Gebruiker\\Documents\\UU\\MSc Thesis\\Code\\OutPut\\" #laptop
BasePath <- "C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\probleminstances" #UU pc
PathComponents <- c(BasePath,
"Instance_", InstanceName,
"_Schedule_", ScheduleName,
"_Runs_", Nruns,
"_",FileType,
".txt")
FilePath <- paste(PathComponents, collapse="")
return(FilePath)
}
GetSimSettings <- function(InstanceName,ScheduleName,Nruns){
path <- GetPath(InstanceName,ScheduleName,Nruns,"SimSettings")
return(read.csv2(file = path,header = FALSE))
}
GetQMs <- function(InstanceName,ScheduleName,Nruns){
path <- GetPath(InstanceName,ScheduleName,Nruns,"QMs")
return(read.csv2(file = path, header = FALSE))
}
GetInstanceName <- function(){
return(SimSettings[1,])
}
GetScheduleName <- function(){
return(SimSettings[2,])
}
GetRMName <- function(){
f <- levels(GetSimSettings(INSTANCE,SCHEDNAMES[1],NRUNS)[2+2*RM.ID,])[6]
return(f)
}
QMNames <- c("Cmax","Linear Start Delay","Start Punctuality","TODO: Completion Punctuality")
GetQMName <- function(){
return(QMNames[QM.ID])
}
GetRM <- function(SimSettings){
f <- SimSettings[3+2*RM.ID,]
return( as.numeric(levels(f))[f] )
}
GetQM <- function(QMData){
return(QMData[,1+QM.ID])
}
GetCmaxColumn <- function(QMData){
return(QMData[,2])
}
GetLinearDelayColumn <- function(){
return(QMData[,3])
}
GetStartPunctualityColumn <- function(){
return(QMData[,4])
}
GetCompletionPunctualiyColumn <- function(){
return(QMData[,5])
}
BuildDfFor <- function(InstanceName,ScheduleName,Nruns){
rmvals <- GetRM(GetSimSettings(InstanceName,ScheduleName,Nruns))
cmax <- GetQM(GetQMs(InstanceName,ScheduleName,Nruns))
df <- data.frame( RM = rmvals, Cmax = cmax)
df.summary <- df %>% group_by(RM) %>% summarize(ymin = mean(cmax) - sd(cmax), ymax = mean(cmax) + sd(cmax),ymean = mean(cmax))
df.summary$PointLabel <- abbreviate(ScheduleName)
return( df.summary )
}
# build data frame:
BuildPlot <- function(cScheduleNames,InstanceName,Nruns)
{
##
dflist <- lapply(cScheduleNames,FUN = BuildDfFor, InstanceName = InstanceName, Nruns = Nruns)
dfplotinfo <- rbind.fill(dflist)
return (dfplotinfo)
}
plot.df <- BuildPlot(SCHEDNAMES,INSTANCE,NRUNS)
errorBarWidth <- max(plot.df$RM) / (4 * length(unique(plot.df$RM)))
p <- ggplot(plot.df, aes(x = RM, y = ymean, label= PointLabel)) + geom_point(size = 2) + geom_errorbar(aes(ymin = ymin, ymax = ymax, width = errorBarWidth))+geom_text(aes(label=PointLabel),hjust=0, vjust=0)
p + labs(x = paste(c("Schedule ",abbreviate(GetRMName())," score"),collapse=''), y = GetQMName())
SCHEDNAMES <- c("Rolling Machine Assignment", "Random", "GreedyLoadBalancing")
INSTANCE <- "Pinedo"
NRUNS <- "1000"
RM.ID <- 1
QM.ID <- 2
###
########################## Libraries #########################################
###
library(ggplot2)
library(plyr)
library(dplyr)
###
########################## FUNCTIONS #########################################
###
GetPathToOutput <- function(InstanceName,ScheduleName,Nruns,FileType){
# BasePath <- "C:\\Users\\Gebruiker\\Documents\\UU\\MSc Thesis\\Code\\OutPut\\" #laptop
BasePath <- "C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\" #UU pc
PathComponents <- c(BasePath,
"Instance_", InstanceName,
"_Schedule_", ScheduleName,
"_Runs_", Nruns,
"_",FileType,
".txt")
FilePath <- paste(PathComponents, collapse="")
return(FilePath)
}
GetSimSettings <- function(InstanceName,ScheduleName,Nruns){
path <- GetPathToOutput(InstanceName,ScheduleName,Nruns,"SimSettings")
return(read.csv2(file = path,header = FALSE))
}
GetQMs <- function(InstanceName,ScheduleName,Nruns){
path <- GetPathToOutput(InstanceName,ScheduleName,Nruns,"QMs")
return(read.csv2(file = path, header = FALSE))
}
GetInstanceName <- function(){
return(SimSettings[1,])
}
GetScheduleName <- function(){
return(SimSettings[2,])
}
GetRMName <- function(){
f <- levels(GetSimSettings(INSTANCE,SCHEDNAMES[1],NRUNS)[2+2*RM.ID,])[6]
return(f)
}
QMNames <- c("Cmax","Linear Start Delay","Start Punctuality","TODO: Completion Punctuality")
GetQMName <- function(){
return(QMNames[QM.ID])
}
GetRM <- function(SimSettings){
f <- SimSettings[3+2*RM.ID,]
return( as.numeric(levels(f))[f] )
}
GetQM <- function(QMData){
return(QMData[,1+QM.ID])
}
GetCmaxColumn <- function(QMData){
return(QMData[,2])
}
GetLinearDelayColumn <- function(){
return(QMData[,3])
}
GetStartPunctualityColumn <- function(){
return(QMData[,4])
}
GetCompletionPunctualiyColumn <- function(){
return(QMData[,5])
}
####
BuildDfFor <- function(InstanceName,ScheduleName,Nruns){
rmvals <- GetRM(GetSimSettings(InstanceName,ScheduleName,Nruns))
cmax <- GetQM(GetQMs(InstanceName,ScheduleName,Nruns))
df <- data.frame( RM = rmvals, Cmax = cmax)
df.summary <- df %>% group_by(RM) %>% summarize(ymin = mean(cmax) - sd(cmax), ymax = mean(cmax) + sd(cmax),ymean = mean(cmax))
df.summary$PointLabel <- abbreviate(ScheduleName)
return( df.summary )
}
# build data frame:
BuildPlot <- function(cScheduleNames,InstanceName,Nruns)
{
##
dflist <- lapply(cScheduleNames,FUN = BuildDfFor, InstanceName = InstanceName, Nruns = Nruns)
dfplotinfo <- rbind.fill(dflist)
return (dfplotinfo)
}
#
#
######## ACTUAL WORK ##########################################
#
#
plot.df <- BuildPlot(SCHEDNAMES,INSTANCE,NRUNS)
errorBarWidth <- max(plot.df$RM) / (4 * length(unique(plot.df$RM)))
p <- ggplot(plot.df, aes(x = RM, y = ymean, label= PointLabel)) + geom_point(size = 2) + geom_errorbar(aes(ymin = ymin, ymax = ymax, width = errorBarWidth))+geom_text(aes(label=PointLabel),hjust=0, vjust=0)
p + labs(x = paste(c("Schedule ",abbreviate(GetRMName())," score"),collapse=''), y = GetQMName())
ls()
rm(INSTANCE)
ls()
plot.df
cars
mtcars
ggplot(mtcars,aes(x=disp,y=hp,colour=cyl))
ggplot(mtcars,aes(x=disp,y=hp,colour=cyl))+geom_point(size=4)
ggplot(mtcars,aes(x=disp,y=hp,colour=factor(cyl)))+geom_point(size=4)
ggplot(mtcars,aes(x=disp,y=mean(hp),colour=factor(cyl)))+geom_point(size=4)
mtcars$cyl
group_by(mtcars,cyl)
minicars <- id %>% group_by(cyl) %>% summarise(hp=mean(hp))
minicars <- mtcars %>% group_by(cyl) %>% summarise(hp=mean(hp))
minicars
ggplot(minicars,aes(x=cyl,y=hp,colour=factor(cyl)))+geom_point(size=4)
ggplot(mtcars,aes(x=disp,y=mean(hp),colour=factor(cyl)))+geom_point(size=4)
ggplot(mtcars,aes(x=disp,y=hp,colour=factor(cyl)))+geom_point(size=4)
minicars <- mtcars %>% group_by(cyl) %>% summarise(hp=mean(hp),am=am)
minicars <- id %>% group_by(cyl,am) %>% summarise(hp=mean(hp))
minicars <- id %>% group_by(cyl) %>% summarise(hp=mean(hp),am=am)
minicars <- id %>% group_by(cyl) %>% summarise(hp=mean(hp),am=mean(am))
minicars <- mtcars %>% group_by(cyl) %>% summarise(hp=mean(hp),am=mean(am))
minicars
minicars <- mtcars %>% group_by(cyl) %>% summarise(hp=mean(hp),am)
minicars <- mtcars %>% group_by(cyl) %>% summarise(hp=mean(hp),am=am)
mtcars$am
group_by(mtcars,cyl,am)
minicars <- mtcars %>% group_by(cyl,am) %>% summarise(hp=mean(hp))
minicars
ggplot(minicars,aes(x=cyl,y=hp,colour=factor(am)))+geom_point(size=4)
myDF <- data.frame(c("Schedule Type","Instance Name","RM1","QM1"))
myDF
myDF <- data.frame(names=c("Schedule Type","Instance Name","RM1","QM1"))
myDF
scheds <- c("S1","S1","S1","S2","S2","S2")
scheds <- c("S1","S1","S1","S2","S2","S2","S3","S3","S3","S4","S4","S4")
scheds <- c("S1","S1","S1","S2","S2","S2","S1","S1","S1","S2","S2","S2")
ins <- c("I1,I1,I1,I1,I1,I1,I2,I2,I2,I2,I2,I2")
RM1 <- c(11,11,11,12,12,12,21,21,21,22,22,22)
QM1 <- c(1,2,3,11,12,13,21,22,23,31,32,33)
myDF <- data.frame(scheds,ins,RM1,QM1)
myDF
ins <- c("I1","I1","I1","I1","I1","I1","I2","I2","I2","I2","I2","I2")
myDF <- data.frame(scheds,ins,RM1,QM1)
myDF
myDF <- data.frame(ins,scheds,RM1,QM1)
myDF
myDF.plot <- myDF %>% group_by(ins,scheds) %>% summarize(RM1 = mean(RM1),QM1=mean(QM1))
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds))
myDF.plot
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds))+geom_point()
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds))+geom_point(size=4)
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))+geom_point(size=4)
myDF.plot <- myDF %>% group_by(ins,scheds) %>% summarize(RM1 = mean(RM1),QM1=mean(QM1),QM1sd = sd(QM1))
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))+geom_point(size=4)+geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
myDF.plot <- myDF %>% group_by(ins,scheds) %>% summarize(RM1 = mean(RM1),QM1=mean(QM1),QM1sd = sd(QM1))
myDF.plot
sd()
sd(12,2,3,4,5)
sd(c(12,2,3,4,5))
myDF.plot <- myDF %>% group_by(ins,scheds) %>% summarize(RM1 = mean(RM1),QM1=mean(QM1),QM1sd = min(QM1))
myDF.plot
myDF.plot <- myDF %>% group_by(ins,scheds) %>% summarize(RM1 = mean(RM1),QM1sd = min(QM1),QM1=mean(QM1))
myDF.plot
myDF.plot <- myDF %>% group_by(ins,scheds) %>% summarize(RM1 = mean(RM1),QM1sd = sd(QM1),QM1=mean(QM1))
myDF.plot
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))+geom_point(size=4)+geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds,xaxis=0))
+geom_point(size=4)
+geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
########### plot from one big data file ############
myDF.plot <- myDF %>%
group_by(ins,scheds) %>%
summarize(RM1 = mean(RM1),QM1sd = sd(QM1),QM1=mean(QM1))
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds,xaxis=0))
+geom_point(size=4)
+geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
+expand_limits(x=0,y=0)
########### plot from one big data file ############
myDF.plot <- myDF %>%
group_by(ins,scheds) %>%
summarize(RM1 = mean(RM1),QM1sd = sd(QM1),QM1=mean(QM1))
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds,xaxis=0))
+geom_point(size=4)
+geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
+scale_x_continuous(expand = c(0, 0))
+ scale_y_continuous(expand = c(0, 0))
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds,xaxis=0))
+ geom_point(size=4)
+ geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
+ scale_x_continuous(expand = c(0, 0))
+ scale_y_continuous(expand = c(0, 0))
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))
+ geom_point(size=4)
+ geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
+ scale_x_continuous(expand = c(0, 0))
+ scale_y_continuous(expand = c(0, 0))
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))
+ geom_point(size=4)
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))
+ geom_point()
ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds)) + geom_point()
########### plot from one big data file ############
myDF.plot <- myDF %>%
group_by(ins,scheds) %>%
summarize(RM1 = mean(RM1),QM1sd = sd(QM1),QM1=mean(QM1))
p <- ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
p <- p + scale_x_continuous(expand = c(0, 0))
p <- p + scale_y_continuous(expand = c(0, 0))
p
p <- ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = (0,100))
p <- p + scale_y_continuous(expand = c(0, 0),limits= (0,100))
########### plot from one big data file ############
myDF.plot <- myDF %>%
group_by(ins,scheds) %>%
summarize(RM1 = mean(RM1),QM1sd = sd(QM1),QM1=mean(QM1))
p <- ggplot(myDF.plot,aes(x=RM1,y=QM1,colour=scheds,shape=scheds))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM1-QM1sd,ymax=QM1+QM1sd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,100))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,100))
p
