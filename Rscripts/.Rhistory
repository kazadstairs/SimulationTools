tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1) +
geom_line() +
geom_point(
boxplot(l.FN~SS,data=GLOBAL.Results.Replace.theta001.epsilon001,
xlab="Sample Size",
ylab="False Negatives",
main="Number of False Negatives, sampling with replacement."
)
dev.off()
#
#
#
##################################################
#
#
#
#TODO: Write a function that determines sample size for toivonnen
Toiv.Thresh <- 0.01
Abs.freq.error <- 0.01 #epsilon
Pr.exceed.error <- 0.001
Pr.miss <- 0.01
############################################## How bad are the Chernoff bounds? ##############
T.SS <- c(20000,40000,60000,80000)
Tminfreq <- c(0.0025,0.005,0.0075,0.01,0.015,0.02)
T20 <- c(0.13,0.34,0.55,0.77,1.22,1.67)
T40 <- c(0.17,0.38,0.61,0.83,1.30,1.77)
T60 <- c(0.18,0.40,0.63,0.86,1.33,1.35)
T80 <- c(0.19,0.41,0.65,0.88,1.35,1.84)
T.Actual <- data.frame(Tminfreq,T20,T40,T60,T80)
T.Actual
T20.cher <- Tminfreq
T40.cher <- Tminfreq
T60.cher <- Tminfreq
T80.cher <- Tminfreq
T.cher <- data.frame(T20.cher,T40.cher,T60.cher,T80.cher)
round((T.cher - T.Chernoff.diffs)*100,2)
Threshold.List <- c(0.1,0.15,0.2,0.25,0.3,0.4,0.5,0.75,1,1.5,2) / 100 #percentage converted to fraction
FICount.at.thresh <- function(threshold)
{
apriori.params <- list(supp = threshold, target = "frequent itemsets") #conf and rules for AR
freq.itemsets.t100k <- apriori(t100k.dat, apriori.params)
return(length((freq.itemsets.t100k)))
}
FISize.List <- sapply(Threshold.List,FUN=FICount.at.thresh)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1) +
geom_line() +
geom_point()
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-se, ymax=l.mean.error+se), width=.1) +
geom_line() +
geom_point()
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-se, ymax=l.mean.error+se), width=.1) +
geom_line() +
geom_point()
dev.off()
tgc
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-(100*se), ymax=l.mean.error+(100*se), width=.1) +
geom_line() +
geom_point()
dev.off()
boxplot(l.FN~SS,data=GLOBAL.Results.Replace.theta001.epsilon001,
xlab="Sample Size",
ylab="False Negatives",
main="Number of False Negatives, sampling with replacement."
)
#
#
#
##################################################
#
#
#
#TODO: Write a function that determines sample size for toivonnen
Toiv.Thresh <- 0.01
Abs.freq.error <- 0.01 #epsilon
Pr.exceed.error <- 0.001
Pr.miss <- 0.01
############################################## How bad are the Chernoff bounds? ##############
T.SS <- c(20000,40000,60000,80000)
Tminfreq <- c(0.0025,0.005,0.0075,0.01,0.015,0.02)
T20 <- c(0.13,0.34,0.55,0.77,1.22,1.67)
T40 <- c(0.17,0.38,0.61,0.83,1.30,1.77)
T60 <- c(0.18,0.40,0.63,0.86,1.33,1.35)
T80 <- c(0.19,0.41,0.65,0.88,1.35,1.84)
T.Actual <- data.frame(Tminfreq,T20,T40,T60,T80)
T.Actual
T20.cher <- Tminfreq
T40.cher <- Tminfreq
T60.cher <- Tminfreq
T80.cher <- Tminfreq
T.cher <- data.frame(T20.cher,T40.cher,T60.cher,T80.cher)
round((T.cher - T.Chernoff.diffs)*100,2)
Threshold.List <- c(0.1,0.15,0.2,0.25,0.3,0.4,0.5,0.75,1,1.5,2) / 100 #percentage converted to fraction
FICount.at.thresh <- function(threshold)
{
apriori.params <- list(supp = threshold, target = "frequent itemsets") #conf and rules for AR
freq.itemsets.t100k <- apriori(t100k.dat, apriori.params)
return(length((freq.itemsets.t100k)))
}
FISize.List <- sapply(Threshold.List,FUN=FICount.at.thresh)
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-(100*se), ymax=l.mean.error+(100*se), width=.1)) +
geom_line() +
geom_point()
dev.off()
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-(100*se), ymax=l.mean.error+(100*se), width=1)) +
geom_line() +
geom_point()
dev.off()
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-(100*se), ymax=l.mean.error+(100*se), width=100)) +
geom_line() +
geom_point()
dev.off()
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-(100*se), ymax=l.mean.error+(100*se), width=10000)) +
geom_line() +
geom_point()
dev.off()
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-se, ymax=l.mean.error+se, width=1000)) +
geom_line() +
geom_point()
dev.off()
tgc
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
geom_line() +
geom_point()
library(ggplot2)
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
geom_line() +
geom_point()
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
geom_line() +
geom_point()
dev.off()
pdf("fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error,xlab="Sample Size",ylab="Mean Loss")) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
geom_line() +
geom_point()
dev.off()
set.seed(5)
PATH <- "C:\Users\Gebruiker\Documents\UU\BigData"
PATH <- "C:\\Users\\Gebruiker\\Documents\\UU\\BigData"
pdf(c(PATH,"\\fig_Loss, sampling with replacement.pdf")
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error,xlab="Sample Size",ylab="Mean Loss")) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
geom_line() +
geom_point()
dev.off()
boxplot(l.FN~SS,data=GLOBAL.Results.Replace.theta001.epsilon001,
xlab="Sample Size",
ylab="False Negatives",
main="Number of False Negatives, sampling with replacement."
)
#
#
#
##################################################
#
#
#
#TODO: Write a function that determines sample size for toivonnen
Toiv.Thresh <- 0.01
Abs.freq.error <- 0.01 #epsilon
Pr.exceed.error <- 0.001
Pr.miss <- 0.01
############################################## How bad are the Chernoff bounds? ##############
T.SS <- c(20000,40000,60000,80000)
Tminfreq <- c(0.0025,0.005,0.0075,0.01,0.015,0.02)
T20 <- c(0.13,0.34,0.55,0.77,1.22,1.67)
T40 <- c(0.17,0.38,0.61,0.83,1.30,1.77)
T60 <- c(0.18,0.40,0.63,0.86,1.33,1.35)
T80 <- c(0.19,0.41,0.65,0.88,1.35,1.84)
T.Actual <- data.frame(Tminfreq,T20,T40,T60,T80)
T.Actual
T20.cher <- Tminfreq
T40.cher <- Tminfreq
T60.cher <- Tminfreq
T80.cher <- Tminfreq
T.cher <- data.frame(T20.cher,T40.cher,T60.cher,T80.cher)
round((T.cher - T.Chernoff.diffs)*100,2)
Threshold.List <- c(0.1,0.15,0.2,0.25,0.3,0.4,0.5,0.75,1,1.5,2) / 100 #percentage converted to fraction
FICount.at.thresh <- function(threshold)
{
apriori.params <- list(supp = threshold, target = "frequent itemsets") #conf and rules for AR
freq.itemsets.t100k <- apriori(t100k.dat, apriori.params)
return(length((freq.itemsets.t100k)))
}
FISize.List <- sapply(Threshold.List,FUN=FICount.at.thresh)
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf"))
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error,xlab="Sample Size",ylab="Mean Loss")) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
geom_line() +
geom_point()
dev.off()
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
labs(x = "Sample Size", y = "Mean Loss")
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
labs(x = "Sample Size", y = "Mean Loss") +
geom_line() +
geom_point()
dev.off()
PATH <- "C:\\Users\\Gebruiker\\Documents\\UU\\BigData\\Output"
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
labs(x = "Sample Size", y = "Mean Loss") +
geom_line() +
geom_point()
dev.off()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- delta.hat
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=yvar)) +
geom_errorbar(aes(ymin=yvar-sd, ymax=yvar+sd, width=1000)) +
labs(x = "Sample Size", y = Estimated expression(delta)) +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- delta.hat
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=yvar)) +
geom_errorbar(aes(ymin=yvar-sd, ymax=yvar+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- "delta.hat"
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=yvar)) +
geom_errorbar(aes(ymin=yvar-sd, ymax=yvar+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- delta.hat
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c("SS"))
ggplot(tgc, aes(x=SS, y=yvar)) +
geom_errorbar(aes(ymin=yvar-sd, ymax=yvar+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
tgc
GLOBAL.Results.Replace.theta001.epsilon001
names(GLOBAL.Results.Replace.theta001.epsilon001)
names(GLOBAL.Results.Replace.theta001.epsilon001)<-c("Sample Size","TP","FN","FP","Mean Loss","Delta hat")
GLOBAL.Results.Replace.theta001.epsilon001
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- delta.hat
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c("SS"))
names(GLOBAL.Results.Replace.theta001.epsilon001)<-c("Sample Size","TP","FN","FP","Mean Loss","Delta hat")
names(GLOBAL.Results.Replace.theta001.epsilon001)
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- delta.hat
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c("SS"))
ggplot(tgc, aes(x="Sample Size", y=yvar)) +
geom_errorbar(aes(ymin=yvar-sd, ymax=yvar+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
tgc
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- delta.hat
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c("Sample Size"))
ggplot(tgc, aes(x="Sample Size", y=yvar)) +
geom_errorbar(aes(ymin=yvar-sd, ymax=yvar+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- "delta.hat"
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c("Sample Size"))
tgc
GLOBAL.Results.Replace.theta001.epsilon001
GLOBAL.Results.Replace.theta001.epsilon001$`Sample Size`
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- "delta.hat"
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="delta.hat", groupvars=c(`Sample Size`))
names(GLOBAL.Results.Replace.theta001.epsilon001)
names(GLOBAL.Results.Replace.theta001.epsilon001) <- c("Sample.Size","TP","FN","FP","Mean.Loss","Delta.hat")
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvar <- "Delta.hat"
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar=yvar, groupvars=c("Sample.Size"))
tgc
ggplot(tgc, aes(x="Sample Size", y=yvar)) +
geom_errorbar(aes(ymin=yvar-sd, ymax=yvar+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvarname <- "Delta.hat"
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar=yvarname, groupvars=c("Sample.Size"))
ggplot(tgc, aes(x="Sample Size", y=yvarname)) +
geom_errorbar(aes(ymin=Delta.hat-sd, ymax=Delta.hat+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
dev.off()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvarname <- "Delta.hat"
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar=yvarname, groupvars=c("Sample.Size"))
ggplot(tgc, aes(x="Sample Size", y=yvarname)) +
geom_errorbar(aes(ymin=Delta.hat-sd, ymax=Delta.hat+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
dev.off()
tgc
typeof(tgc)
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="l.mean.error", groupvars=c("SS"))
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="Mean.Loss", groupvars=c("Sample.Size"))
ggplot(tgc, aes(x=SS, y=l.mean.error)) +
geom_errorbar(aes(ymin=l.mean.error-sd, ymax=l.mean.error+sd, width=1000)) +
labs(x = "Sample Size", y = "Mean Loss") +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="Mean.Loss", groupvars=c("Sample.Size"))
ggplot(tgc, aes(x=SS, y=Mean.Loss)) +
geom_errorbar(aes(ymin=Mean.Loss-sd, ymax=Mean.Loss+sd, width=1000)) +
labs(x = "Sample Size", y = "Mean Loss") +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_Loss, sampling with replacement.pdf",sep=""))
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar="Mean.Loss", groupvars=c("Sample.Size"))
ggplot(tgc, aes(x=Sample.Size, y=Mean.Loss)) +
geom_errorbar(aes(ymin=Mean.Loss-sd, ymax=Mean.Loss+sd, width=1000)) +
labs(x = "Sample Size", y = "Mean Loss") +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvarname <- "Delta.hat"
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar=yvarname, groupvars=c("Sample.Size"))
ggplot(tgc, aes(x=Sample.Size, y=yvarname)) +
geom_errorbar(aes(ymin=Delta.hat-sd, ymax=Delta.hat+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
pdf(paste(PATH,"\\fig_delta, sampling with replacement.pdf",sep=""))
yvarname <- "Delta.hat"
library(ggplot2)
tgc <- summarySE(GLOBAL.Results.Replace.theta001.epsilon001, measurevar=yvarname, groupvars=c("Sample.Size"))
ggplot(tgc, aes(x=Sample.Size, y=Delta.hat)) +
geom_errorbar(aes(ymin=Delta.hat-sd, ymax=Delta.hat+sd, width=1000)) +
labs(x = "Sample Size", y = paste("Estimated", expression(delta))) +
geom_line() +
geom_point()
dev.off()
setwd(dir="C:/Users/Gebruiker/Documents/UU/MSc Thesis/Code/Simulation/SimulationTools/Rscripts/")
SCHEDNAMES <- c("Rolling Machine Assignment", "Random", "GreedyLoadBalancing")
INSTANCES <- c("Pinedo",
"30j-15r-4m.ms",
"30j-15r-8m.ms",
"30j-30r-4m.ms",
"30j-30r-4m.ms",
"30j-75r-4m.ms",
"30j-75r-4m.ms",
"100j-50r-6m.ms",
"100j-50r-12m.ms",
"100j-100r-6m.ms",
"100j-100r-12m.ms",
"100j-250r-6m.ms",
"100j-250r-12m.ms")
NRUNS <- "1000"
RM.ID <- 1
QM.ID <- 2
library(ggplot2)
library(plyr)
library(dplyr)
MakePlot <- function(string.RM, string.QM)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,1.1*max(myDF.plot$RM)))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,1.1*max(myDF.plot$QM)))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
MakePlot.WithRange <- function(string.RM, string.QM,xRange,yRange)
{
RMsym <- sym(string.RM)
QMsym <- sym(string.QM)
#RMsym <- sym("FS")
#QMsym <- sym("Cmax")
library(ggplot2)
#library(tidyverse)
myDF.plot <- myDF %>%
group_by(Distribution.Type,Instance.Name,Schedule.AssignType,Schedule.StartTimeType) %>%
summarize(RM = mean(!!RMsym),QMsd = sd(!!QMsym),QM=mean(!!QMsym))
# names(myDF.plot)[3] <- string.RM
#  names(myDF.plot)[4] <- paste(string.QM,"sd",sep="")
#  names(myDF.plot)[5] <- string.QM
p <- ggplot(myDF.plot,aes(x=RM,y=QM,colour=Distribution.Type,shape=Distribution.Type))
p <- p + geom_point()
p <- p + geom_errorbar(aes(ymin=QM-QMsd,ymax=QM+QMsd))
p <- p + scale_x_continuous(expand = c(0, 0),limits = c(0,xRange))
p <- p + scale_y_continuous(expand = c(0, 0),limits= c(0,yRange))
p <- p + xlab(string.RM) + ylab(string.QM)
p <- p + theme(legend.position = "top")
fileName <- paste("C:\\Users\\3496724\\Source\\Repos\\SimulationTools\\Results\\RMs\\",string.RM,"_vs_",string.QM,".pdf",sep="")
ggsave(filename = fileName,plot = p)
print(p)
}
Plot.SchedStart.vs.RealisedStart <- function()
{
}
MakeAllPlots <- function()
{
RMs <- c("FS","BFS","UFS","wFS")
QMs <- c("Cmax","LinearStartDelay","Start.Punctuality","Finish.Punctuality")
for(Rm in RMs)
{
for(Qm in QMs)
{
MakePlot(Rm,Qm)
}
}
}
myDF <- read.csv2("C:/Users/3496724/Source/Repos/SimulationTools/Results/RMs/allresults.txt")
LAPTOPPATH <- "C:/Users/Gebruiker/Documents/UU/MSc Thesis/Code/Simulation/SimulationTools/Results/RMs/allresults.txt"
myDF <- read.csv2(LAPTOPPATH)
MakePlot.WithRange("FS","Cmax",1000,1000)
